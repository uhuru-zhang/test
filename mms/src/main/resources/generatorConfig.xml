<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >

<!--mybatisGenerator配置文件，每次添加新的bean时，只要配置相应的entity、mapper生成的类路径即可，然后运行maven插件 -->
<generatorConfiguration>
	<!-- mysql jar 文件位置 -->
	<classPathEntry
		location="F:\javaMysqlBin\mysql-connector-java-5.1.30-bin.jar" />
	<context id="store" targetRuntime="MyBatis3">

		<commentGenerator>
			<!-- 是否去除自动生成的注释 true：是 ： false:否 -->
			<property name="suppressAllComments" value="true" />
			<!-- 是否去除所有自动生成的文件的时间戳，默认为false -->
			<!-- <property name="suppressDate" value="false"/> -->
		</commentGenerator>

		<!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
		<jdbcConnection driverClass="com.mysql.jdbc.Driver"
			connectionURL="jdbc:mysql://127.0.0.1:3306/membermanagementsystem"
			userId="root" password="123456">
		</jdbcConnection>

<!-- F:\git\project\BPMN\autumn\ -->
		<!-- targetPackage:包名称(自定义) targetProject：项目路径(自定义) -->
		<javaModelGenerator targetPackage="cn.com.core.store.entity"
			targetProject="src\main\java">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
			<!-- 从数据库返回的值被清理前后的空格 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<!-- 配置生成相应的实体Mapper.xml，对于Mapper3.X我们需要把type="XMLMAPPER" -->
		<!-- targetPackage:包名称(自定义) targetProject：项目路径(自定义) -->
		<sqlMapGenerator targetPackage="cn.com.core.store.mapper"
			targetProject="src\main\java">
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>

		<!-- 配置生成相应的接口类，对应与Mapper.xml中的一系列CRUD方法SQL语句 -->
		<!-- targetPackage:包名称(自定义) targetProject：项目路径(自定义) -->
		<javaClientGenerator targetPackage="cn.com.core.store.mapper"
			targetProject="src\main\java" type="XMLMAPPER">
			<property name="enableSubPackages" value="false" />
		</javaClientGenerator>
		<!-- 用户表 -->

		<!-- <table schema="stone" tableName="hy_memeber" domainObjectName="Member" 
			enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" 
			enableSelectByExample="true" selectByExampleQueryId="true"> -->

		<!-- <table schema="stone" tableName="md_cabin" domainObjectName="Cabin" 
			enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" 
			enableSelectByExample="true" selectByExampleQueryId="true"> -->

	<table schema="stone" tableName="md_store" domainObjectName="Store"
		enableCountByExample="true" enableUpdateByExample="true"
		enableDeleteByExample="true" enableSelectByExample="true"
		selectByExampleQueryId="true">
		<!-- 使用数据库中的名字作为生成的类的属性的名字 -->
		<property name="useActualColumnNames" value="true" />
	</table>

<!-- 		<table schema="stone" tableName="sys_users" domainObjectName="User"
			enableCountByExample="true" enableUpdateByExample="true"
			enableDeleteByExample="true" enableSelectByExample="true"
			selectByExampleQueryId="true">


			使用数据库中的名字作为生成的类的属性的名字
			<property name="useActualColumnNames" value="true" />
		</table>

		<table schema="stone" tableName="sys_roles" domainObjectName="Role"
			enableCountByExample="true" enableUpdateByExample="true"
			enableDeleteByExample="true" enableSelectByExample="true"
			selectByExampleQueryId="true">


			使用数据库中的名字作为生成的类的属性的名字
			<property name="useActualColumnNames" value="true" />
		</table>

		<table schema="stone" tableName="sys_permissions"
			domainObjectName="Permission" enableCountByExample="true"
			enableUpdateByExample="true" enableDeleteByExample="true"
			enableSelectByExample="true" selectByExampleQueryId="true">


			使用数据库中的名字作为生成的类的属性的名字
			<property name="useActualColumnNames" value="true" />
		</table> -->
<!-- 		<table schema="stone" tableName="sys_users_roles"
			domainObjectName="UserToRole" enableCountByExample="true"
			enableUpdateByExample="true" enableDeleteByExample="true"
			enableSelectByExample="true" selectByExampleQueryId="true">


			使用数据库中的名字作为生成的类的属性的名字
			<property name="useActualColumnNames" value="true" />
		</table> -->
		<!-- <table schema="stone" tableName="sys_roles_permissions"
			domainObjectName="RoleToPermission" enableCountByExample="true"
			enableUpdateByExample="true" enableDeleteByExample="true"
			enableSelectByExample="true" selectByExampleQueryId="true">


			使用数据库中的名字作为生成的类的属性的名字
			<property name="useActualColumnNames" value="true" />
		</table> -->
		
<!-- 		<table schema="stone" tableName="sys_menu"
			domainObjectName="Menu" enableCountByExample="true"
			enableUpdateByExample="true" enableDeleteByExample="true"
			enableSelectByExample="true" selectByExampleQueryId="true">


			使用数据库中的名字作为生成的类的属性的名字
			<property name="useActualColumnNames" value="true" />
		</table> -->
	</context>
</generatorConfiguration>
